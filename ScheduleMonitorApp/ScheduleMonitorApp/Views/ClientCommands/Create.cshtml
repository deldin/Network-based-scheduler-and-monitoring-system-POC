@model ScheduleMonitorApp.ViewModels.NewCommandViewModel

@{
    ViewBag.Title = "Create";
}
<script type="text/javascript" src="~\Scripts\jquery-1.10.2.min.js"></script>
<h2>Create</h2>

<script type="text/javascript">
   
    function disableTimes(val) {
        if (val.checked === false) {
            $('#ScheduledDate').attr('disabled', 'disabled');
            $('#ScheduledTime').attr('disabled', 'disabled');
        } else {
            $('#ScheduledDate').removeAttr('disabled');
            $('#ScheduledTime').removeAttr('disabled');
        }
    };

    $(document).ready(function () {
        $('#ScheduledDate').attr('disabled', 'disabled');
        $('#ScheduledTime').attr('disabled', 'disabled');
    });

</script>

@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    @Html.Hidden("ClientId",ViewData["clientId"].ToString())
    <div class="form-horizontal">
        <h4>ClientCommand</h4>
        <hr />
        @Html.ValidationSummary(true)

        @*<div class="form-group">
            @Html.LabelFor(model => model.ClientId, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ClientId)
                @Html.ValidationMessageFor(model => model.ClientId)
            </div>
        </div>*@

        <div class="form-group">
            @Html.LabelFor(model => model.Command, new {@class = "control-label col-md-2"})
            <div class="col-md-10">
                @Html.EditorFor(model => model.Command)
                @Html.ValidationMessageFor(model => model.Command)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.IsScheduled, new {@class = "control-label col-md-2"})
            <div class="col-md-10">
                @Html.CheckBoxFor(model => model.IsScheduled,new{onchange="disableTimes(this);"})
                @Html.ValidationMessageFor(model => model.IsScheduled)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.IsExecuted, new {@class = "control-label col-md-2"})
            <div class="col-md-10">
                @Html.DisplayFor(model => model.IsExecuted)
                @Html.ValidationMessageFor(model => model.IsExecuted)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ScheduledDate, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ScheduledDate)
                @Html.ValidationMessageFor(model => model.ScheduledDate)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ScheduledTime, new {@class = "control-label col-md-2"})
            <div class="col-md-10">
                @Html.EditorFor(model => model.ScheduledTime)
                @Html.ValidationMessageFor(model => model.ScheduledTime)
            </div>
        </div>
        
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index", new { clientId = ViewData["clientId"].ToString() }, new { @Class = "btn btn-warning" })
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
